set -g prefix C-o
set -g repeat-time 35
set -g base-index 1

unbind &
bind-key & kill-window

# swap panes
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

unbind x
bind-key x kill-pane

# tmux scroll overwrite
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# for a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# # quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# # Easy bindings for split
unbind %
bind | split-window -h
bind - split-window -v
bind-key _ split-window -v

# # Act like vim for selecting panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+


bind-key J resize-pane -D
bind-key K resize-pane -U
bind-key H resize-pane -L
bind-key L resize-pane -R

# Ctrl-o (      # previous session
# Ctrl-o )      # next session
# Ctrl-o L      # â€˜lastâ€™ (previously used) session
# Ctrl-o s      # choose a session from a list

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# # Set term color properly set -g default-terminal "screen-256color"
# set -g default-terminal "rxvt"
set -g default-terminal "screen-256color"

# scroll back size
set -g history-limit 50000

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# pass through xterm keys
set -g xterm-keys on

# # Sane colors for a dark background
 set -g status-bg '#666666'
 set -g status-fg '#aaaaaa'
 set-window-option -g window-status-style fg=blue

# # hostname color
 set -g status-left '#[fg=colour237]#H'

# # right status and color
 set -g status-right '#[fg=colour237]%A %v %l:%M %p'

# # Fix tmux copy bug
#set-option -g default-command "reattach-to-user-namespace -l zsh"

# # change the escape time in tmux to zero
set-option -sg escape-time 0

set -g status-position top

set -g pane-border-style fg=colour235
set -g pane-active-border-style fg=colour235

# # auto rename windows
set -g automatic-rename off

bind-key S run-shell "tmux rename-session $(basename $(pwd))"

bind-key n next-window
bind-key p previous-windo;

# # Use vim keybindings in copy mode
setw -g mode-keys vi

# # Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi Enter ; bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# allowing hex code sent from iterm2 to work (needed in 2.1)
set -g assume-paste-time 0

#unbind [
#
#bind Escape copy-mode
#unbind p
#bind p paste-buffer

# # Set status bar
set -g status on
#set -g status-utf8 on
set -g status-bg black
set -g status-fg white
set -g status-interval 4
set -g status-left-length 90
set -g status-right-length 90
set -g status-left "#[fg=Green]#(whoami)#[fg=white]::#[fg=gray]#(hostname -s)#[fg=white]::#[fg=gray]#(curl --connect-timeout 1 ipecho.net/plain;echo) "
set -g status-justify left
set -g status-right "#[fg=Cyan]#S #[fg=green,bg=black]#(tmux-mem-cpu-load --interval 4 -m 2)#[default] #[fg=white]%a %d %b ðŸ•‘  %R : UTC #( date -u | awk '{print $4}' | cut -f1,2 -d :)"
